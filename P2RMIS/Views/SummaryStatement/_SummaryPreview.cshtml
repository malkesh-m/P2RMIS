@using Sra.P2rmis.CrossCuttingServices
@using Sra.P2rmis.WebModels.SummaryStatement
@model Sra.P2rmis.Web.UI.Models.EditSummaryStatementViewModel

<span class="ui-helper-hidden-accessible"><input type="text"  style="display: none;"/></span>

<div>
    <table id="appInfo" class="gridTable" align="center">
        <tr class="whiteBackground">
            <td colspan="4">@Model.ApplicationDetails.ApplicationTitle</td>
        </tr>
        <tr class="whiteBackground">
            <td>Log Number:</td>
            <td>@Model.ApplicationDetails.LogNumber</td>
            <td>Project Duration:</td>
            <td>@ViewHelpers.FormatDurationIntoMonths(Model.ApplicationDetails.Duration)</td>
        </tr>
        <tr class="whiteBackground">
            <td>Grants.gov ID Number:</td>
            <td>@Model.ApplicationDetails.GrantID</td>
            <td>Total Budget Requested:</td>
            <td>@ViewHelpers.FormatCurrency(Model.ApplicationDetails.TotalBudget)</td>
        </tr>
        <tr class="whiteBackground">
            <td>Principal Investigator:</td>
            <td>@Model.ApplicationDetails.PiLastName, @Model.ApplicationDetails.PiFirstName</td>
            <td>Direct Costs:</td>
            <td>@ViewHelpers.FormatCurrency(Model.ApplicationDetails.DirectCosts)</td>
        </tr>
        <tr class="whiteBackground">
            <td>Performing Org:</td>
            <td>@Model.ApplicationDetails.PiOrganization</td>
            <td>Indirect Costs:</td>
            <td>@ViewHelpers.FormatCurrency(Model.ApplicationDetails.IndirectCosts)</td>
        </tr>
        <tr class="whiteBackground">
            <td>Contracting Org:</td>
            <td>@Model.ApplicationDetails.AdminOrgName</td>
            <td></td>
            <td></td>
        </tr>
    </table>
</div>
<div style="margin:10px 0 10px 0">
    @if (Model.DoDisplayAverageScoreTable)
    {
        <table id="scoreSummary" class="gridTable" align="center">
            <tr class="whiteBackground bold">
                <td>Score Summary</td>
                <td class="center">Average Score</td>
                <td class="center">Standard Deviation</td>
            </tr>
            <tr class="whiteBackground">
                <td>
                    <div class="bold">Overall Rating</div>
                    <div>Rating Scale: @Model.AverageScoreTableData.OverallScaleHigh (high merit) to @Model.AverageScoreTableData.OverallScaleLow (low merit)</div>
                </td>
                <td class="center"><div>@ViewHelpers.ScoreFormatter(Model.AverageScoreTableData.OverallScore)</div></td>
                <td class="center">@ViewHelpers.ScoreFormatter((decimal?)Model.AverageScoreTableData.OverallStandardDeviation)</td>
            </tr>
            @if (Model.AverageScoreTableData.CriteriaScores.ToList().Count > 0)
            {
                <tr class="grayBackground">
                    <td colspan="3">&nbsp;</td>
                </tr>
                <tr class="whiteBackground">
                    <td><div class="bold">Evaluation Criteria</div><div>Rating Scale: 10.0 (high merit) to 1.0 (low merit)</div></td>
                    <td colspan="2" class="bold center">Average Score</td>
                </tr>
                foreach (CriteriaAverageScoreModel cr in Model.AverageScoreTableData.CriteriaScores)
                {
                    <tr class="whiteBackground">
                        <td class="bold leftPadding50">@cr.CriteriaDescription</td>
                        <td colspan="2" class="center">@ViewHelpers.ScoreFormatter(cr.CriteriaScore)</td>
                    </tr>
                }
            }
        </table>
    }
    else
    {
        if (Model.IndividualScoreTableData != null && Model.IndividualScoreTableData.ToList().Count > 0)
        {
            var iReviewers = Model.IndividualScoreTableData.ToList()[0].ReviewerScores.Count();
            <table id="scoreSummary" class="gridTable" align="center">
                <tr class="whiteBackground bold">
                    <td>Score Summary</td>
                    <td colspan="@iReviewers" class="center">Score</td>
                </tr>
                <tr class="whiteBackground bold">
                    <td>Overall</td>
                    @foreach (SummaryIndividualScoreModel cr in Model.IndividualScoreTableData)
                    {
                        if (cr.IsOverall)
                        {
                            foreach (ReviewerScoreModel rs in cr.ReviewerScores)
                            {
                                <td class="center">@ViewHelpers.ScoreFormatterNotCalculated(rs.Score, rs.ScoreType, rs.AdjectivalValue)</td>
                            }
                        }
                    }
                </tr>
                <tr style="background-color:gray">
                    <td colspan="@(iReviewers + 1)">&nbsp;</td>
                </tr>
                <tr class="whiteBackground">
                    <td>
                        <div class="bold">Evaluation Criteria</div>
                        <div>Rating Scale: @Model.IndividualScoreTableData.ToList()[0].ScaleHighValue (high merit) to @Model.IndividualScoreTableData.ToList()[0].ScaleLowValue (low merit)</div>
                    </td>
                    <td colspan="@iReviewers">&nbsp;</td>
                </tr>
                @foreach (SummaryIndividualScoreModel cr in Model.IndividualScoreTableData)
                {
                    if (!cr.IsOverall)
                    {
                        <tr class="whiteBackground">
                            <td class="bold leftPadding50">@cr.CriteriaName</td>
                            @foreach (ReviewerScoreModel rs in cr.ReviewerScores)
                            {
                                <td class="center">@ViewHelpers.ScoreFormatterNotCalculated(rs.Score, rs.ScoreType, rs.AdjectivalValue)</td>
                            }
                        </tr>
                    }
                }
            </table>
        }
    }
</div>
@{
    int iStepContent = 0;
    int iSection = 0;
}
@*Loop to get the criteria*@
@foreach (var item in Model.Criteria)
{
    if (!string.IsNullOrEmpty(item.Key))
    {
        var sectionAnchor = "section" + iSection;
        <div style="padding-bottom:10px;">
            <h4>
                <a class="sectionTitle" id="@sectionAnchor" name="@sectionAnchor">@item.Key</a>
            </h4>
            @*Loop to get the reviewers for each criteria as well as discussion notes if they exist*@
            <div>
                @foreach (var subitem in item.Value)
                {
                    string reviewer = subitem.ReviewerAssignmentType;
                    string disNotes = "Discussion Notes";
                    string overview = "Summary";
                    if (subitem.ElementTextFlag)
                    {
                        <div class="sectionContent" data-index="@iStepContent">
                            @if (subitem.DiscussionNoteFlag)
                            {
                                <b>@disNotes</b>
                            }
                            else if (subitem.IsOverview)
                            {
                                <b>@overview</b>
                            }
                            else
                            {
                                if (!string.IsNullOrEmpty(subitem.ElementContentAdjectivalLabel))
                                {
                                    <b>@reviewer - Adjectival Rating: @subitem.ElementContentAdjectivalLabel</b>
                                }
                                else
                                {
                                    <b>@reviewer</b>
                                }
                            }

                            <div class="currentContent">@Html.Raw(subitem.ElementContentTextNoMarkup)</div>
                        </div>
                    }
                    iStepContent += 1;
                }
            </div>
        </div>
    }
    iSection += 1;
}