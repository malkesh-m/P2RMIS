//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sra.P2rmis.Dal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class P2RMISNETEntities : DbContext
    {
        public P2RMISNETEntities()
            : base("name=P2RMISNETEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<FileStore> FileStores { get; set; }
        public virtual DbSet<FileStoreMain> FileStoreMains { get; set; }
        public virtual DbSet<LookupTemplateCategory> LookupTemplateCategories { get; set; }
        public virtual DbSet<LookupTemplateStage> LookupTemplateStages { get; set; }
        public virtual DbSet<LookupTemplateType> LookupTemplateTypes { get; set; }
        public virtual DbSet<SystemTemplate> SystemTemplates { get; set; }
        public virtual DbSet<SystemTemplateVersion> SystemTemplateVersions { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserAddress> UserAddresses { get; set; }
        public virtual DbSet<UserClient> UserClients { get; set; }
        public virtual DbSet<UserEmail> UserEmails { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
        public virtual DbSet<UserPhone> UserPhones { get; set; }
        public virtual DbSet<UserSystemRole> UserSystemRoles { get; set; }
        public virtual DbSet<UserApplicationComment> UserApplicationComments { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<LookupReportGroup> LookupReportGroups { get; set; }
        public virtual DbSet<LookupReportParameter> LookupReportParameters { get; set; }
        public virtual DbSet<ReportParameter> ReportParameters { get; set; }
        public virtual DbSet<ReportPermission> ReportPermissions { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Workflow> Workflows { get; set; }
        public virtual DbSet<WorkflowStep> WorkflowSteps { get; set; }
        public virtual DbSet<ApplicationReviewStatu> ApplicationReviewStatus { get; set; }
        public virtual DbSet<ReviewStatu> ReviewStatus { get; set; }
        public virtual DbSet<AccessLevel> AccessLevels { get; set; }
        public virtual DbSet<ApplicationTemplate> ApplicationTemplates { get; set; }
        public virtual DbSet<ApplicationTemplateElement> ApplicationTemplateElements { get; set; }
        public virtual DbSet<ApplicationWorkflow> ApplicationWorkflows { get; set; }
        public virtual DbSet<ApplicationWorkflowStep> ApplicationWorkflowSteps { get; set; }
        public virtual DbSet<ApplicationWorkflowStepAssignment> ApplicationWorkflowStepAssignments { get; set; }
        public virtual DbSet<ApplicationWorkflowStepElement> ApplicationWorkflowStepElements { get; set; }
        public virtual DbSet<ApplicationWorkflowStepElementComment> ApplicationWorkflowStepElementComments { get; set; }
        public virtual DbSet<ApplicationWorkflowStepElementContent> ApplicationWorkflowStepElementContents { get; set; }
        public virtual DbSet<ApplicationWorkflowStepElementContentHistory> ApplicationWorkflowStepElementContentHistories { get; set; }
        public virtual DbSet<ApplicationWorkflowStepWorkLog> ApplicationWorkflowStepWorkLogs { get; set; }
        public virtual DbSet<ClientElement> ClientElements { get; set; }
        public virtual DbSet<ClientScoringScale> ClientScoringScales { get; set; }
        public virtual DbSet<ClientScoringScaleAdjectival> ClientScoringScaleAdjectivals { get; set; }
        public virtual DbSet<MechanismTemplate> MechanismTemplates { get; set; }
        public virtual DbSet<MechanismTemplateElement> MechanismTemplateElements { get; set; }
        public virtual DbSet<ReviewStatusType> ReviewStatusTypes { get; set; }
        public virtual DbSet<StepType> StepTypes { get; set; }
        public virtual DbSet<ElementType> ElementTypes { get; set; }
        public virtual DbSet<ApplicationDefaultWorkflow> ApplicationDefaultWorkflows { get; set; }
        public virtual DbSet<WorkflowMechanism> WorkflowMechanism { get; set; }
        public virtual DbSet<ClientDefaultWorkflow> ClientDefaultWorkflows { get; set; }
        public virtual DbSet<AccountStatu> AccountStatus { get; set; }
        public virtual DbSet<AddressType> AddressTypes { get; set; }
        public virtual DbSet<ApplicationBudget> ApplicationBudgets { get; set; }
        public virtual DbSet<ApplicationInfo> ApplicationInfoes { get; set; }
        public virtual DbSet<ApplicationPersonnel> ApplicationPersonnels { get; set; }
        public virtual DbSet<ApplicationSummaryLog> ApplicationSummaryLogs { get; set; }
        public virtual DbSet<ApplicationText> ApplicationTexts { get; set; }
        public virtual DbSet<ClientApplicationInfoType> ClientApplicationInfoTypes { get; set; }
        public virtual DbSet<ClientAwardType> ClientAwardTypes { get; set; }
        public virtual DbSet<ClientMeeting> ClientMeetings { get; set; }
        public virtual DbSet<ClientParticipantType> ClientParticipantTypes { get; set; }
        public virtual DbSet<ClientProgram> ClientPrograms { get; set; }
        public virtual DbSet<ClientRole> ClientRoles { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Degree> Degrees { get; set; }
        public virtual DbSet<Ethnicity> Ethnicities { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<MeetingSession> MeetingSessions { get; set; }
        public virtual DbSet<MeetingType> MeetingTypes { get; set; }
        public virtual DbSet<MilitaryRank> MilitaryRanks { get; set; }
        public virtual DbSet<PanelApplication> PanelApplications { get; set; }
        public virtual DbSet<PanelUserAssignment> PanelUserAssignments { get; set; }
        public virtual DbSet<PhoneType> PhoneTypes { get; set; }
        public virtual DbSet<Prefix> Prefixes { get; set; }
        public virtual DbSet<ProgramMechanism> ProgramMechanism { get; set; }
        public virtual DbSet<ProgramPanel> ProgramPanels { get; set; }
        public virtual DbSet<ProgramUserAssignment> ProgramUserAssignments { get; set; }
        public virtual DbSet<ProgramYear> ProgramYears { get; set; }
        public virtual DbSet<RecoveryQuestion> RecoveryQuestions { get; set; }
        public virtual DbSet<SessionPanel> SessionPanels { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<UserAccountRecovery> UserAccountRecoveries { get; set; }
        public virtual DbSet<UserDegree> UserDegrees { get; set; }
        public virtual DbSet<UserResume> UserResumes { get; set; }
        public virtual DbSet<ApplicationResearchCategory> ApplicationResearchCategories { get; set; }
        public virtual DbSet<ClientApplicationPersonnelType> ClientApplicationPersonnelTypes { get; set; }
        public virtual DbSet<ClientApplicationTextType> ClientApplicationTextTypes { get; set; }
        public virtual DbSet<ResearchCategoryType> ResearchCategoryTypes { get; set; }
        public virtual DbSet<ClientCoiType> ClientCoiTypes { get; set; }
        public virtual DbSet<ClientExpertiseRating> ClientExpertiseRatings { get; set; }
        public virtual DbSet<PanelApplicationReviewerCoiDetail> PanelApplicationReviewerCoiDetails { get; set; }
        public virtual DbSet<PanelApplicationReviewerExpertise> PanelApplicationReviewerExpertises { get; set; }
        public virtual DbSet<ActionLog> ActionLogs { get; set; }
        public virtual DbSet<ActionLogReason> ActionLogReasons { get; set; }
        public virtual DbSet<TransferReason> TransferReasons { get; set; }
        public virtual DbSet<ApplicationStage> ApplicationStages { get; set; }
        public virtual DbSet<AssignmentType> AssignmentTypes { get; set; }
        public virtual DbSet<PanelApplicationReviewerAssignment> PanelApplicationReviewerAssignments { get; set; }
        public virtual DbSet<PanelStage> PanelStages { get; set; }
        public virtual DbSet<PanelStageStep> PanelStageSteps { get; set; }
        public virtual DbSet<ReviewStage> ReviewStages { get; set; }
        public virtual DbSet<ClientAssignmentType> ClientAssignmentTypes { get; set; }
        public virtual DbSet<ClientReviewerEvaluationGroup> ClientReviewerEvaluationGroups { get; set; }
        public virtual DbSet<ReviewerEvaluation> ReviewerEvaluations { get; set; }
        public virtual DbSet<ReviewerEvaluationGroupGuidance> ReviewerEvaluationGroupGuidances { get; set; }
        public virtual DbSet<CommunicationLog> CommunicationLogs { get; set; }
        public virtual DbSet<CommunicationLogAttachment> CommunicationLogAttachments { get; set; }
        public virtual DbSet<CommunicationLogRecipient> CommunicationLogRecipients { get; set; }
        public virtual DbSet<CommunicationLogRecipientType> CommunicationLogRecipientTypes { get; set; }
        public virtual DbSet<MechanismTemplateElementScoring> MechanismTemplateElementScorings { get; set; }
        public virtual DbSet<ProfileType> ProfileTypes { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<UserWebsite> UserWebsites { get; set; }
        public virtual DbSet<WebsiteType> WebsiteTypes { get; set; }
        public virtual DbSet<AlternateContactType> AlternateContactTypes { get; set; }
        public virtual DbSet<UserAlternateContact> UserAlternateContacts { get; set; }
        public virtual DbSet<UserAlternateContactPhone> UserAlternateContactPhones { get; set; }
        public virtual DbSet<EmailAddressType> EmailAddressTypes { get; set; }
        public virtual DbSet<MilitaryStatusType> MilitaryStatusTypes { get; set; }
        public virtual DbSet<AccountStatusReason> AccountStatusReasons { get; set; }
        public virtual DbSet<UserAccountStatu> UserAccountStatus { get; set; }
        public virtual DbSet<UserAccountStatusChangeLog> UserAccountStatusChangeLogs { get; set; }
        public virtual DbSet<ProfileTypeRole> ProfileTypeRoles { get; set; }
        public virtual DbSet<SystemRole> SystemRoles { get; set; }
        public virtual DbSet<PanelApplicationSummary> PanelApplicationSummaries { get; set; }
        public virtual DbSet<SummaryDocument> SummaryDocuments { get; set; }
        public virtual DbSet<SummaryReviewerDescription> SummaryReviewerDescriptions { get; set; }
        public virtual DbSet<ClientScoringScaleLegend> ClientScoringScaleLegends { get; set; }
        public virtual DbSet<ClientScoringScaleLegendItem> ClientScoringScaleLegendItems { get; set; }
        public virtual DbSet<CommentType> CommentTypes { get; set; }
        public virtual DbSet<ClientRegistration> ClientRegistrations { get; set; }
        public virtual DbSet<ClientRegistrationDocument> ClientRegistrationDocuments { get; set; }
        public virtual DbSet<PanelUserRegistration> PanelUserRegistrations { get; set; }
        public virtual DbSet<PanelUserRegistrationDocument> PanelUserRegistrationDocuments { get; set; }
        public virtual DbSet<PanelUserRegistrationDocumentItem> PanelUserRegistrationDocumentItems { get; set; }
        public virtual DbSet<RegistrationDocumentItem> RegistrationDocumentItems { get; set; }
        public virtual DbSet<AcademicRank> AcademicRanks { get; set; }
        public virtual DbSet<ProfessionalAffiliation> ProfessionalAffiliations { get; set; }
        public virtual DbSet<ClientRegistrationDocumentItem> ClientRegistrationDocumentItems { get; set; }
        public virtual DbSet<RegistrationDocumentType> RegistrationDocumentTypes { get; set; }
        public virtual DbSet<TrainingCategory> TrainingCategories { get; set; }
        public virtual DbSet<RoleTask> RoleTasks { get; set; }
        public virtual DbSet<SystemOperation> SystemOperations { get; set; }
        public virtual DbSet<SystemTask> SystemTasks { get; set; }
        public virtual DbSet<TaskOperation> TaskOperations { get; set; }
        public virtual DbSet<UserInfoChangeLog> UserInfoChangeLogs { get; set; }
        public virtual DbSet<UserInfoChangeType> UserInfoChangeTypes { get; set; }
        public virtual DbSet<PanelUserPotentialAssignment> PanelUserPotentialAssignments { get; set; }
        public virtual DbSet<ParticipationMethod> ParticipationMethods { get; set; }
        public virtual DbSet<UserEvaluationLog> UserEvaluationLogs { get; set; }
        public virtual DbSet<CommunicationMethod> CommunicationMethods { get; set; }
        public virtual DbSet<UserCommunicationLog> UserCommunicationLogs { get; set; }
        public virtual DbSet<ApplicationCompliance> ApplicationCompliances { get; set; }
        public virtual DbSet<ComplianceStatu> ComplianceStatus { get; set; }
        public virtual DbSet<ApplicationStageStep> ApplicationStageSteps { get; set; }
        public virtual DbSet<ApplicationStageStepDiscussion> ApplicationStageStepDiscussions { get; set; }
        public virtual DbSet<ApplicationStageStepDiscussionComment> ApplicationStageStepDiscussionComments { get; set; }
        public virtual DbSet<MeetingRegistration> MeetingRegistrations { get; set; }
        public virtual DbSet<MeetingRegistrationAttendance> MeetingRegistrationAttendances { get; set; }
        public virtual DbSet<MeetingRegistrationHotel> MeetingRegistrationHotels { get; set; }
        public virtual DbSet<TravelMode> TravelModes { get; set; }
        public virtual DbSet<Hotel> Hotels { get; set; }
        public virtual DbSet<StepTypeOperation> StepTypeOperations { get; set; }
        public virtual DbSet<ClientConfiguration> ClientConfigurations { get; set; }
        public virtual DbSet<SystemConfiguration> SystemConfigurations { get; set; }
        public virtual DbSet<ProgramMeeting> ProgramMeetings { get; set; }
        public virtual DbSet<MechanismRelationshipType> MechanismRelationshipTypes { get; set; }
        public virtual DbSet<MechanismScoringTemplate> MechanismScoringTemplates { get; set; }
        public virtual DbSet<ScoringTemplate> ScoringTemplates { get; set; }
        public virtual DbSet<ScoringTemplatePhase> ScoringTemplatePhases { get; set; }
        public virtual DbSet<SessionPhase> SessionPhases { get; set; }
        public virtual DbSet<ApplicationWorkflowSummaryStatement> ApplicationWorkflowSummaryStatements { get; set; }
        public virtual DbSet<ProgramMechanismSummaryStatement> ProgramMechanismSummaryStatements { get; set; }
        public virtual DbSet<SummaryStatementMode> SummaryStatementModes { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<RoleParticipantType> RoleParticipantTypes { get; set; }
        public virtual DbSet<ClientDataDeliverable> ClientDataDeliverables { get; set; }
        public virtual DbSet<ClientServiceAccount> ClientServiceAccounts { get; set; }
        public virtual DbSet<ClientTransferType> ClientTransferTypes { get; set; }
        public virtual DbSet<ProgramCycleDeliverable> ProgramCycleDeliverables { get; set; }
        public virtual DbSet<ServiceLog> ServiceLogs { get; set; }
        public virtual DbSet<PeerReviewContentType> PeerReviewContentTypes { get; set; }
        public virtual DbSet<PeerReviewDocument> PeerReviewDocuments { get; set; }
        public virtual DbSet<PeerReviewDocumentAccess> PeerReviewDocumentAccesses { get; set; }
        public virtual DbSet<PeerReviewDocumentType> PeerReviewDocumentTypes { get; set; }
        public virtual DbSet<UserPeerReviewDocument> UserPeerReviewDocuments { get; set; }
        public virtual DbSet<UserBlockLog> UserBlockLogs { get; set; }
        public virtual DbSet<UserBlockLogClient> UserBlockLogClients { get; set; }
        public virtual DbSet<UserClientBlock> UserClientBlocks { get; set; }
        public virtual DbSet<VendorType> VendorTypes { get; set; }
        public virtual DbSet<AssignmentTypeThreshold> AssignmentTypeThresholds { get; set; }
        public virtual DbSet<VendorIdAssigned> VendorIdAssigneds { get; set; }
        public virtual DbSet<UserVendor> UserVendors { get; set; }
        public virtual DbSet<MeetingRegistrationTravel> MeetingRegistrationTravels { get; set; }
        public virtual DbSet<ReferralMapping> ReferralMappings { get; set; }
        public virtual DbSet<ReferralMappingData> ReferralMappingDatas { get; set; }
        public virtual DbSet<ImportLog> ImportLogs { get; set; }
        public virtual DbSet<ImportLogItem> ImportLogItems { get; set; }
        public virtual DbSet<ProgramMechanismImportLog> ProgramMechanismImportLogs { get; set; }
        public virtual DbSet<EmploymentCategory> EmploymentCategories { get; set; }
        public virtual DbSet<MeetingRegistrationComment> MeetingRegistrationComments { get; set; }
        public virtual DbSet<MeetingRegistrationTravelFlight> MeetingRegistrationTravelFlights { get; set; }
        public virtual DbSet<Airport> Airports { get; set; }
        public virtual DbSet<Carrier> Carriers { get; set; }
        public virtual DbSet<SessionUserAssignment> SessionUserAssignments { get; set; }
        public virtual DbSet<ClientFileConfiguration> ClientFileConfigurations { get; set; }
        public virtual DbSet<Nominee> Nominees { get; set; }
        public virtual DbSet<NomineeAffected> NomineeAffecteds { get; set; }
        public virtual DbSet<NomineePhone> NomineePhones { get; set; }
        public virtual DbSet<NomineeProgram> NomineePrograms { get; set; }
        public virtual DbSet<NomineeSponsor> NomineeSponsors { get; set; }
        public virtual DbSet<NomineeSponsorPhone> NomineeSponsorPhones { get; set; }
        public virtual DbSet<NomineeType> NomineeTypes { get; set; }
        public virtual DbSet<ApplicationTopicCode> ApplicationTopicCodes { get; set; }
        public virtual DbSet<ClientSummaryTemplate> ClientSummaryTemplates { get; set; }
        public virtual DbSet<NominatingOrganization> NominatingOrganizations { get; set; }
        public virtual DbSet<ProgramSessionPayRate> ProgramSessionPayRates { get; set; }
        public virtual DbSet<ContractStatus> ContractStatuses { get; set; }
        public virtual DbSet<PanelUserRegistrationDocumentContract> PanelUserRegistrationDocumentContracts { get; set; }
        public virtual DbSet<UserPassword> UserPasswords { get; set; }
        public virtual DbSet<PolicyRestrictionType> PolicyRestrictionTypes { get; set; }
        public virtual DbSet<PolicyType> PolicyTypes { get; set; }
        public virtual DbSet<WeekDay> WeekDays { get; set; }
        public virtual DbSet<Policy> Policies { get; set; }
        public virtual DbSet<PolicyNetworkRange> PolicyNetworkRanges { get; set; }
        public virtual DbSet<PolicyWeekDay> PolicyWeekDays { get; set; }
        public virtual DbSet<PolicyHistory> PolicyHistories { get; set; }
        public virtual DbSet<PolicyNetworkRangeHistory> PolicyNetworkRangeHistories { get; set; }
        public virtual DbSet<PolicyWeekDayHistory> PolicyWeekDayHistories { get; set; }
        public virtual DbSet<PolicyStatu> PolicyStatus { get; set; }
    
        public virtual ObjectResult<ReviewerInfo_Result> ReviewerInfo(Nullable<int> panelApplicationId)
        {
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("PanelApplicationId", panelApplicationId) :
                new ObjectParameter("PanelApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReviewerInfo_Result>("ReviewerInfo", panelApplicationIdParameter);
        }
    
        public virtual int uspBeginApplicationSummaryWorkflow(Nullable<int> panelApplicationId, Nullable<int> userId, Nullable<int> workflowId)
        {
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("PanelApplicationId", panelApplicationId) :
                new ObjectParameter("PanelApplicationId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var workflowIdParameter = workflowId.HasValue ?
                new ObjectParameter("WorkflowId", workflowId) :
                new ObjectParameter("WorkflowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBeginApplicationSummaryWorkflow", panelApplicationIdParameter, userIdParameter, workflowIdParameter);
        }
    
        public virtual ObjectResult<uspPreviewApplicationSummaryWorkflow_Result> uspPreviewApplicationSummaryWorkflow(Nullable<int> panelApplicationId)
        {
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("PanelApplicationId", panelApplicationId) :
                new ObjectParameter("PanelApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPreviewApplicationSummaryWorkflow_Result>("uspPreviewApplicationSummaryWorkflow", panelApplicationIdParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfLastUpdatedCritiquePhase")]
        public virtual IQueryable<udfLastUpdatedCritiquePhase_Result> udfLastUpdatedCritiquePhase(Nullable<int> panelUserAssignmentId, Nullable<int> panelApplicationId, Nullable<int> clientElementId)
        {
            var panelUserAssignmentIdParameter = panelUserAssignmentId.HasValue ?
                new ObjectParameter("PanelUserAssignmentId", panelUserAssignmentId) :
                new ObjectParameter("PanelUserAssignmentId", typeof(int));
    
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("PanelApplicationId", panelApplicationId) :
                new ObjectParameter("PanelApplicationId", typeof(int));
    
            var clientElementIdParameter = clientElementId.HasValue ?
                new ObjectParameter("ClientElementId", clientElementId) :
                new ObjectParameter("ClientElementId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfLastUpdatedCritiquePhase_Result>("[P2RMISNETEntities].[udfLastUpdatedCritiquePhase](@PanelUserAssignmentId, @PanelApplicationId, @ClientElementId)", panelUserAssignmentIdParameter, panelApplicationIdParameter, clientElementIdParameter);
        }
    
        public virtual int uspBeginReviewerWorkflow(Nullable<int> panelApplicationReviewerAssignmentId, Nullable<int> userId)
        {
            var panelApplicationReviewerAssignmentIdParameter = panelApplicationReviewerAssignmentId.HasValue ?
                new ObjectParameter("PanelApplicationReviewerAssignmentId", panelApplicationReviewerAssignmentId) :
                new ObjectParameter("PanelApplicationReviewerAssignmentId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBeginReviewerWorkflow", panelApplicationReviewerAssignmentIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<uspGetUsersByEmail_Result> uspGetUsersByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUsersByEmail_Result>("uspGetUsersByEmail", emailParameter);
        }
    
        public virtual ObjectResult<uspGetUsersByName_Result> uspGetUsersByName(string firstName, string lastName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUsersByName_Result>("uspGetUsersByName", firstNameParameter, lastNameParameter);
        }
    
        public virtual ObjectResult<uspGetUsersByUserLogin_Result> uspGetUsersByUserLogin(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUsersByUserLogin_Result>("uspGetUsersByUserLogin", userLoginParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfApplicationWorkflowActiveStep")]
        public virtual IQueryable<udfApplicationWorkflowActiveStep_Result> udfApplicationWorkflowActiveStep(Nullable<int> applicationWorkflowId)
        {
            var applicationWorkflowIdParameter = applicationWorkflowId.HasValue ?
                new ObjectParameter("ApplicationWorkflowId", applicationWorkflowId) :
                new ObjectParameter("ApplicationWorkflowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfApplicationWorkflowActiveStep_Result>("[P2RMISNETEntities].[udfApplicationWorkflowActiveStep](@ApplicationWorkflowId)", applicationWorkflowIdParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfApplicationWorkflowLastStep")]
        public virtual IQueryable<udfApplicationWorkflowLastStep_Result> udfApplicationWorkflowLastStep(Nullable<int> applicationWorkflowId)
        {
            var applicationWorkflowIdParameter = applicationWorkflowId.HasValue ?
                new ObjectParameter("ApplicationWorkflowId", applicationWorkflowId) :
                new ObjectParameter("ApplicationWorkflowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfApplicationWorkflowLastStep_Result>("[P2RMISNETEntities].[udfApplicationWorkflowLastStep](@ApplicationWorkflowId)", applicationWorkflowIdParameter);
        }
    
        public virtual int uspBeginScoringWorkflow(Nullable<int> panelApplicationId, Nullable<int> userId)
        {
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("panelApplicationId", panelApplicationId) :
                new ObjectParameter("panelApplicationId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBeginScoringWorkflow", panelApplicationIdParameter, userIdParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfPanelStageLastStep")]
        public virtual IQueryable<udfPanelStageLastStep_Result> udfPanelStageLastStep(Nullable<int> panelStageId)
        {
            var panelStageIdParameter = panelStageId.HasValue ?
                new ObjectParameter("PanelStageId", panelStageId) :
                new ObjectParameter("PanelStageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfPanelStageLastStep_Result>("[P2RMISNETEntities].[udfPanelStageLastStep](@PanelStageId)", panelStageIdParameter);
        }
    
        public virtual int uspCreatePanelUserRegistration(Nullable<int> panelUserAssignmentId, Nullable<int> userId)
        {
            var panelUserAssignmentIdParameter = panelUserAssignmentId.HasValue ?
                new ObjectParameter("PanelUserAssignmentId", panelUserAssignmentId) :
                new ObjectParameter("PanelUserAssignmentId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCreatePanelUserRegistration", panelUserAssignmentIdParameter, userIdParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfLastUpdatedCritiquePhaseAverage")]
        public virtual IQueryable<udfLastUpdatedCritiquePhaseAverage_Result> udfLastUpdatedCritiquePhaseAverage(Nullable<int> panelApplicationId, Nullable<int> clientElementId)
        {
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("PanelApplicationId", panelApplicationId) :
                new ObjectParameter("PanelApplicationId", typeof(int));
    
            var clientElementIdParameter = clientElementId.HasValue ?
                new ObjectParameter("ClientElementId", clientElementId) :
                new ObjectParameter("ClientElementId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfLastUpdatedCritiquePhaseAverage_Result>("[P2RMISNETEntities].[udfLastUpdatedCritiquePhaseAverage](@PanelApplicationId, @ClientElementId)", panelApplicationIdParameter, clientElementIdParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfLastUpdatedCritiquePhaseAverageOverall")]
        public virtual IQueryable<udfLastUpdatedCritiquePhaseAverageOverall_Result> udfLastUpdatedCritiquePhaseAverageOverall(Nullable<int> panelApplicationId)
        {
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("PanelApplicationId", panelApplicationId) :
                new ObjectParameter("PanelApplicationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfLastUpdatedCritiquePhaseAverageOverall_Result>("[P2RMISNETEntities].[udfLastUpdatedCritiquePhaseAverageOverall](@PanelApplicationId)", panelApplicationIdParameter);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorsXml(string application, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorsXml", applicationParameter, pageIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorXml(string application, Nullable<System.Guid> errorId)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorXml", applicationParameter, errorIdParameter);
        }
    
        public virtual int ELMAH_LogError(Nullable<System.Guid> errorId, string application, string host, string type, string source, string message, string user, string allXml, Nullable<int> statusCode, Nullable<System.DateTime> timeUtc)
        {
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var hostParameter = host != null ?
                new ObjectParameter("Host", host) :
                new ObjectParameter("Host", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var allXmlParameter = allXml != null ?
                new ObjectParameter("AllXml", allXml) :
                new ObjectParameter("AllXml", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var timeUtcParameter = timeUtc.HasValue ?
                new ObjectParameter("TimeUtc", timeUtc) :
                new ObjectParameter("TimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELMAH_LogError", errorIdParameter, applicationParameter, hostParameter, typeParameter, sourceParameter, messageParameter, userParameter, allXmlParameter, statusCodeParameter, timeUtcParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "SplitReportParameterInt")]
        public virtual IQueryable<Nullable<int>> SplitReportParameterInt(string parameterToSplit)
        {
            var parameterToSplitParameter = parameterToSplit != null ?
                new ObjectParameter("ParameterToSplit", parameterToSplit) :
                new ObjectParameter("ParameterToSplit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[P2RMISNETEntities].[SplitReportParameterInt](@ParameterToSplit)", parameterToSplitParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "SplitReportParameterString")]
        public virtual IQueryable<string> SplitReportParameterString(string parameterToSplit)
        {
            var parameterToSplitParameter = parameterToSplit != null ?
                new ObjectParameter("ParameterToSplit", parameterToSplit) :
                new ObjectParameter("ParameterToSplit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[P2RMISNETEntities].[SplitReportParameterString](@ParameterToSplit)", parameterToSplitParameter);
        }
    
        public virtual int uspAddOtherSummaryMechanismTemplate(Nullable<int> programMechanismId, Nullable<int> reviewStatusId)
        {
            var programMechanismIdParameter = programMechanismId.HasValue ?
                new ObjectParameter("ProgramMechanismId", programMechanismId) :
                new ObjectParameter("ProgramMechanismId", typeof(int));
    
            var reviewStatusIdParameter = reviewStatusId.HasValue ?
                new ObjectParameter("ReviewStatusId", reviewStatusId) :
                new ObjectParameter("ReviewStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddOtherSummaryMechanismTemplate", programMechanismIdParameter, reviewStatusIdParameter);
        }
    
        public virtual int uspAddPreMeetingPhaseToPanel(Nullable<int> sessionPanelId, Nullable<int> stepTypeId, Nullable<System.DateTime> phaseStartDate, Nullable<System.DateTime> phaseEndDate, Nullable<System.DateTime> phaseReOpenDate, Nullable<System.DateTime> phaseReCloseDate, Nullable<bool> deleteMeetingCritiques)
        {
            var sessionPanelIdParameter = sessionPanelId.HasValue ?
                new ObjectParameter("SessionPanelId", sessionPanelId) :
                new ObjectParameter("SessionPanelId", typeof(int));
    
            var stepTypeIdParameter = stepTypeId.HasValue ?
                new ObjectParameter("StepTypeId", stepTypeId) :
                new ObjectParameter("StepTypeId", typeof(int));
    
            var phaseStartDateParameter = phaseStartDate.HasValue ?
                new ObjectParameter("PhaseStartDate", phaseStartDate) :
                new ObjectParameter("PhaseStartDate", typeof(System.DateTime));
    
            var phaseEndDateParameter = phaseEndDate.HasValue ?
                new ObjectParameter("PhaseEndDate", phaseEndDate) :
                new ObjectParameter("PhaseEndDate", typeof(System.DateTime));
    
            var phaseReOpenDateParameter = phaseReOpenDate.HasValue ?
                new ObjectParameter("PhaseReOpenDate", phaseReOpenDate) :
                new ObjectParameter("PhaseReOpenDate", typeof(System.DateTime));
    
            var phaseReCloseDateParameter = phaseReCloseDate.HasValue ?
                new ObjectParameter("PhaseReCloseDate", phaseReCloseDate) :
                new ObjectParameter("PhaseReCloseDate", typeof(System.DateTime));
    
            var deleteMeetingCritiquesParameter = deleteMeetingCritiques.HasValue ?
                new ObjectParameter("DeleteMeetingCritiques", deleteMeetingCritiques) :
                new ObjectParameter("DeleteMeetingCritiques", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPreMeetingPhaseToPanel", sessionPanelIdParameter, stepTypeIdParameter, phaseStartDateParameter, phaseEndDateParameter, phaseReOpenDateParameter, phaseReCloseDateParameter, deleteMeetingCritiquesParameter);
        }
    
        public virtual int uspAddStandardSummaryMechanismTemplate(Nullable<int> programMechanismId, Nullable<int> reviewStatusId)
        {
            var programMechanismIdParameter = programMechanismId.HasValue ?
                new ObjectParameter("ProgramMechanismId", programMechanismId) :
                new ObjectParameter("ProgramMechanismId", typeof(int));
    
            var reviewStatusIdParameter = reviewStatusId.HasValue ?
                new ObjectParameter("ReviewStatusId", reviewStatusId) :
                new ObjectParameter("ReviewStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddStandardSummaryMechanismTemplate", programMechanismIdParameter, reviewStatusIdParameter);
        }
    
        public virtual int uspAddTaskToRole(string roleName, string taskName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddTaskToRole", roleNameParameter, taskNameParameter);
        }
    
        public virtual int uspAddUserToRole(string userName, string roleName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddUserToRole", userNameParameter, roleNameParameter);
        }
    
        public virtual int uspRemovePhaseFromPanel(Nullable<int> sessionPanelId, Nullable<int> stepTypeId)
        {
            var sessionPanelIdParameter = sessionPanelId.HasValue ?
                new ObjectParameter("SessionPanelId", sessionPanelId) :
                new ObjectParameter("SessionPanelId", typeof(int));
    
            var stepTypeIdParameter = stepTypeId.HasValue ?
                new ObjectParameter("StepTypeId", stepTypeId) :
                new ObjectParameter("StepTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemovePhaseFromPanel", sessionPanelIdParameter, stepTypeIdParameter);
        }
    
        public virtual int uspRemoveTaskFromRole(string roleName, string taskName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemoveTaskFromRole", roleNameParameter, taskNameParameter);
        }
    
        public virtual int uspRemoveUserFromRole(string userName, string roleName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemoveUserFromRole", userNameParameter, roleNameParameter);
        }
    
        public virtual int uspResetApplicationWorkflowStep(Nullable<int> applicationWorkflowStepId, Nullable<int> uID)
        {
            var applicationWorkflowStepIdParameter = applicationWorkflowStepId.HasValue ?
                new ObjectParameter("ApplicationWorkflowStepId", applicationWorkflowStepId) :
                new ObjectParameter("ApplicationWorkflowStepId", typeof(int));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspResetApplicationWorkflowStep", applicationWorkflowStepIdParameter, uIDParameter);
        }
    
        public virtual int uspSubmitApplicationWorkflowStep(Nullable<int> applicationWorkflowStepId, Nullable<int> uID)
        {
            var applicationWorkflowStepIdParameter = applicationWorkflowStepId.HasValue ?
                new ObjectParameter("ApplicationWorkflowStepId", applicationWorkflowStepId) :
                new ObjectParameter("ApplicationWorkflowStepId", typeof(int));
    
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspSubmitApplicationWorkflowStep", applicationWorkflowStepIdParameter, uIDParameter);
        }
    
        public virtual ObjectResult<uspSummaryDefault_Result> uspSummaryDefault(Nullable<int> applicationWorkflowId)
        {
            var applicationWorkflowIdParameter = applicationWorkflowId.HasValue ?
                new ObjectParameter("ApplicationWorkflowId", applicationWorkflowId) :
                new ObjectParameter("ApplicationWorkflowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSummaryDefault_Result>("uspSummaryDefault", applicationWorkflowIdParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfGetSummaryReviewerDescription")]
        public virtual IQueryable<udfGetSummaryReviewerDescription_Result> udfGetSummaryReviewerDescription(Nullable<int> programMechanismId, Nullable<int> clientParticipantTypeId, Nullable<int> clientRoleId, Nullable<int> assignmentOrder)
        {
            var programMechanismIdParameter = programMechanismId.HasValue ?
                new ObjectParameter("ProgramMechanismId", programMechanismId) :
                new ObjectParameter("ProgramMechanismId", typeof(int));
    
            var clientParticipantTypeIdParameter = clientParticipantTypeId.HasValue ?
                new ObjectParameter("ClientParticipantTypeId", clientParticipantTypeId) :
                new ObjectParameter("ClientParticipantTypeId", typeof(int));
    
            var clientRoleIdParameter = clientRoleId.HasValue ?
                new ObjectParameter("ClientRoleId", clientRoleId) :
                new ObjectParameter("ClientRoleId", typeof(int));
    
            var assignmentOrderParameter = assignmentOrder.HasValue ?
                new ObjectParameter("AssignmentOrder", assignmentOrder) :
                new ObjectParameter("AssignmentOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfGetSummaryReviewerDescription_Result>("[P2RMISNETEntities].[udfGetSummaryReviewerDescription](@ProgramMechanismId, @ClientParticipantTypeId, @ClientRoleId, @AssignmentOrder)", programMechanismIdParameter, clientParticipantTypeIdParameter, clientRoleIdParameter, assignmentOrderParameter);
        }
    
        public virtual int uspRemoveApplicationWorkflow(Nullable<int> applicationWorkflowId, Nullable<int> userId)
        {
            var applicationWorkflowIdParameter = applicationWorkflowId.HasValue ?
                new ObjectParameter("ApplicationWorkflowId", applicationWorkflowId) :
                new ObjectParameter("ApplicationWorkflowId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemoveApplicationWorkflow", applicationWorkflowIdParameter, userIdParameter);
        }
    
        public virtual int uspRemovePanelApplication(Nullable<int> panelApplicationId, Nullable<int> userId)
        {
            var panelApplicationIdParameter = panelApplicationId.HasValue ?
                new ObjectParameter("PanelApplicationId", panelApplicationId) :
                new ObjectParameter("PanelApplicationId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemovePanelApplication", panelApplicationIdParameter, userIdParameter);
        }
    
        public virtual int uspRemovePanelUserAssignment(Nullable<int> panelUserAssignmentId, Nullable<int> userId)
        {
            var panelUserAssignmentIdParameter = panelUserAssignmentId.HasValue ?
                new ObjectParameter("PanelUserAssignmentId", panelUserAssignmentId) :
                new ObjectParameter("PanelUserAssignmentId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspRemovePanelUserAssignment", panelUserAssignmentIdParameter, userIdParameter);
        }
    
        [DbFunction("P2RMISNETEntities", "udfReviewCriteriaPivot")]
        public virtual IQueryable<udfReviewCriteriaPivot_Result> udfReviewCriteriaPivot(Nullable<int> applicationWorkflowStepId, Nullable<int> overallEval, Nullable<int> sortOrder)
        {
            var applicationWorkflowStepIdParameter = applicationWorkflowStepId.HasValue ?
                new ObjectParameter("ApplicationWorkflowStepId", applicationWorkflowStepId) :
                new ObjectParameter("ApplicationWorkflowStepId", typeof(int));
    
            var overallEvalParameter = overallEval.HasValue ?
                new ObjectParameter("OverallEval", overallEval) :
                new ObjectParameter("OverallEval", typeof(int));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udfReviewCriteriaPivot_Result>("[P2RMISNETEntities].[udfReviewCriteriaPivot](@ApplicationWorkflowStepId, @OverallEval, @SortOrder)", applicationWorkflowStepIdParameter, overallEvalParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<uspGetScoreDeliverableData_Result> uspGetScoreDeliverableData(Nullable<int> programYearId, Nullable<int> receiptCycle)
        {
            var programYearIdParameter = programYearId.HasValue ?
                new ObjectParameter("ProgramYearId", programYearId) :
                new ObjectParameter("ProgramYearId", typeof(int));
    
            var receiptCycleParameter = receiptCycle.HasValue ?
                new ObjectParameter("ReceiptCycle", receiptCycle) :
                new ObjectParameter("ReceiptCycle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetScoreDeliverableData_Result>("uspGetScoreDeliverableData", programYearIdParameter, receiptCycleParameter);
        }
    
        public virtual int uspBeginReviewerWorkflowPanel(Nullable<int> sessionPanelId, Nullable<int> userId)
        {
            var sessionPanelIdParameter = sessionPanelId.HasValue ?
                new ObjectParameter("SessionPanelId", sessionPanelId) :
                new ObjectParameter("SessionPanelId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspBeginReviewerWorkflowPanel", sessionPanelIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<uspViewPanelDetails_Result> uspViewPanelDetails(Nullable<int> panelIdIn, Nullable<int> userId)
        {
            var panelIdInParameter = panelIdIn.HasValue ?
                new ObjectParameter("PanelIdIn", panelIdIn) :
                new ObjectParameter("PanelIdIn", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPanelDetails_Result>("uspViewPanelDetails", panelIdInParameter, userIdParameter);
        }
    
        public virtual ObjectResult<uspGetPeerReviewData_Result> uspGetPeerReviewData(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPeerReviewData_Result>("uspGetPeerReviewData", clientIdParameter);
        }
    
        public virtual ObjectResult<uspReportApplicationDataQC_Result> uspReportApplicationDataQC(string programList, string fiscalYearList, string cycleList)
        {
            var programListParameter = programList != null ?
                new ObjectParameter("ProgramList", programList) :
                new ObjectParameter("ProgramList", typeof(string));
    
            var fiscalYearListParameter = fiscalYearList != null ?
                new ObjectParameter("FiscalYearList", fiscalYearList) :
                new ObjectParameter("FiscalYearList", typeof(string));
    
            var cycleListParameter = cycleList != null ?
                new ObjectParameter("CycleList", cycleList) :
                new ObjectParameter("CycleList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportApplicationDataQC_Result>("uspReportApplicationDataQC", programListParameter, fiscalYearListParameter, cycleListParameter);
        }
    
        public virtual ObjectResult<uspReportReviewerExpertisePostAssignment_Result> uspReportReviewerExpertisePostAssignment(string programList, string fiscalYearList, string panelList)
        {
            var programListParameter = programList != null ?
                new ObjectParameter("ProgramList", programList) :
                new ObjectParameter("ProgramList", typeof(string));
    
            var fiscalYearListParameter = fiscalYearList != null ?
                new ObjectParameter("FiscalYearList", fiscalYearList) :
                new ObjectParameter("FiscalYearList", typeof(string));
    
            var panelListParameter = panelList != null ?
                new ObjectParameter("PanelList", panelList) :
                new ObjectParameter("PanelList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportReviewerExpertisePostAssignment_Result>("uspReportReviewerExpertisePostAssignment", programListParameter, fiscalYearListParameter, panelListParameter);
        }
    
        public virtual ObjectResult<uspReportReviewerExpertisePostAssignmentSummary_Result> uspReportReviewerExpertisePostAssignmentSummary(string programList, string fiscalYearList, string panelList)
        {
            var programListParameter = programList != null ?
                new ObjectParameter("ProgramList", programList) :
                new ObjectParameter("ProgramList", typeof(string));
    
            var fiscalYearListParameter = fiscalYearList != null ?
                new ObjectParameter("FiscalYearList", fiscalYearList) :
                new ObjectParameter("FiscalYearList", typeof(string));
    
            var panelListParameter = panelList != null ?
                new ObjectParameter("PanelList", panelList) :
                new ObjectParameter("PanelList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportReviewerExpertisePostAssignmentSummary_Result>("uspReportReviewerExpertisePostAssignmentSummary", programListParameter, fiscalYearListParameter, panelListParameter);
        }
    
        public virtual ObjectResult<uspReportReviewerExpertisePreAssignment_Result> uspReportReviewerExpertisePreAssignment(string programList, string fiscalYearList, string panelList)
        {
            var programListParameter = programList != null ?
                new ObjectParameter("ProgramList", programList) :
                new ObjectParameter("ProgramList", typeof(string));
    
            var fiscalYearListParameter = fiscalYearList != null ?
                new ObjectParameter("FiscalYearList", fiscalYearList) :
                new ObjectParameter("FiscalYearList", typeof(string));
    
            var panelListParameter = panelList != null ?
                new ObjectParameter("PanelList", panelList) :
                new ObjectParameter("PanelList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportReviewerExpertisePreAssignment_Result>("uspReportReviewerExpertisePreAssignment", programListParameter, fiscalYearListParameter, panelListParameter);
        }
    
        public virtual ObjectResult<uspReportScoringSetupQC_Result> uspReportScoringSetupQC(string programList, string fiscalYearList, string cycleList)
        {
            var programListParameter = programList != null ?
                new ObjectParameter("ProgramList", programList) :
                new ObjectParameter("ProgramList", typeof(string));
    
            var fiscalYearListParameter = fiscalYearList != null ?
                new ObjectParameter("FiscalYearList", fiscalYearList) :
                new ObjectParameter("FiscalYearList", typeof(string));
    
            var cycleListParameter = cycleList != null ?
                new ObjectParameter("CycleList", cycleList) :
                new ObjectParameter("CycleList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportScoringSetupQC_Result>("uspReportScoringSetupQC", programListParameter, fiscalYearListParameter, cycleListParameter);
        }
    
        public virtual ObjectResult<uspResumeFullTextSearch_Result> uspResumeFullTextSearch(string searchString1, string searchString2, string searchString3, string searchString4, string searchString5)
        {
            var searchString1Parameter = searchString1 != null ?
                new ObjectParameter("SearchString1", searchString1) :
                new ObjectParameter("SearchString1", typeof(string));
    
            var searchString2Parameter = searchString2 != null ?
                new ObjectParameter("SearchString2", searchString2) :
                new ObjectParameter("SearchString2", typeof(string));
    
            var searchString3Parameter = searchString3 != null ?
                new ObjectParameter("SearchString3", searchString3) :
                new ObjectParameter("SearchString3", typeof(string));
    
            var searchString4Parameter = searchString4 != null ?
                new ObjectParameter("SearchString4", searchString4) :
                new ObjectParameter("SearchString4", typeof(string));
    
            var searchString5Parameter = searchString5 != null ?
                new ObjectParameter("SearchString5", searchString5) :
                new ObjectParameter("SearchString5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspResumeFullTextSearch_Result>("uspResumeFullTextSearch", searchString1Parameter, searchString2Parameter, searchString3Parameter, searchString4Parameter, searchString5Parameter);
        }
    }
}
